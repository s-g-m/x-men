// Code generated by MockGen. DO NOT EDIT.
// Source: x-men/app/modules/statistic (interfaces: Controller,Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	statistic "x-men/app/modules/statistic"

	gomock "github.com/golang/mock/gomock"
)

// MockStatisticController is a mock of Controller interface.
type MockStatisticController struct {
	ctrl     *gomock.Controller
	recorder *MockStatisticControllerMockRecorder
}

// MockStatisticControllerMockRecorder is the mock recorder for MockStatisticController.
type MockStatisticControllerMockRecorder struct {
	mock *MockStatisticController
}

// NewMockStatisticController creates a new mock instance.
func NewMockStatisticController(ctrl *gomock.Controller) *MockStatisticController {
	mock := &MockStatisticController{ctrl: ctrl}
	mock.recorder = &MockStatisticControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatisticController) EXPECT() *MockStatisticControllerMockRecorder {
	return m.recorder
}

// GetStatistic mocks base method.
func (m *MockStatisticController) GetStatistic(arg0 statistic.HttpAdapter) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetStatistic", arg0)
}

// GetStatistic indicates an expected call of GetStatistic.
func (mr *MockStatisticControllerMockRecorder) GetStatistic(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatistic", reflect.TypeOf((*MockStatisticController)(nil).GetStatistic), arg0)
}

// MockStatisticService is a mock of Service interface.
type MockStatisticService struct {
	ctrl     *gomock.Controller
	recorder *MockStatisticServiceMockRecorder
}

// MockStatisticServiceMockRecorder is the mock recorder for MockStatisticService.
type MockStatisticServiceMockRecorder struct {
	mock *MockStatisticService
}

// NewMockStatisticService creates a new mock instance.
func NewMockStatisticService(ctrl *gomock.Controller) *MockStatisticService {
	mock := &MockStatisticService{ctrl: ctrl}
	mock.recorder = &MockStatisticServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatisticService) EXPECT() *MockStatisticServiceMockRecorder {
	return m.recorder
}

// GetStatistic mocks base method.
func (m *MockStatisticService) GetStatistic() (statistic.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatistic")
	ret0, _ := ret[0].(statistic.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatistic indicates an expected call of GetStatistic.
func (mr *MockStatisticServiceMockRecorder) GetStatistic() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatistic", reflect.TypeOf((*MockStatisticService)(nil).GetStatistic))
}
